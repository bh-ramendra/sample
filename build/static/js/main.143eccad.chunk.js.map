{"version":3,"sources":["components/Cartitem.js","components/BuyPage.js","components/Cart.js","Pages/Home.js","Contexts/UserContext.js","Pages/Signin.js","Pages/Signup.js","Pages/PageNotFound.js","layout/Header.js","App.js","Config/FirebaseConfig.js","serviceWorker.js","index.js"],"names":["CartItem","product","addInCart","Card","className","CardImg","top","height","width","src","smallImage","CardBody","CardTitle","productName","CardText","productPrice","Button","color","onClick","BuyPage","useState","setProduct","fetchPhotos","a","Axios","get","headers","Authorization","data","photos","allProduct","map","photo","medium","tinyImage","tiny","random","word","commerce","price","id","uuid","console","log","useEffect","Container","fluid","Row","Col","md","key","Cart","cartItem","removeItem","buyNow","amount","forEach","item","parseFloat","ListGroup","ListGroupItem","length","CardHeader","CardFooter","App","setCartItem","findIndex","array","toast","type","filter","singleItem","UserContext","createContext","Signup","context","useContext","email","setEmail","password","setPassword","user","uid","to","lg","Form","onSubmit","e","preventDefault","firebase","auth","signInWithEmailAndPassword","then","res","setUser","catch","error","message","FormGroup","row","Label","for","sm","Input","name","placeholder","value","onChange","target","block","createUserWithEmailAndPassword","PageNotFound","Header","isOpen","setIsOpen","Navbar","light","expand","NavbarBrand","NavbarText","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","tag","Link","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Provider","exact","path","component","Home","Signin","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+YA4BeA,EAjBE,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UAC3B,OACE,kBAACC,EAAA,EAAD,CAAMC,UAAU,cACd,kBAACC,EAAA,EAAD,CAASC,KAAG,EAACC,OAAO,MAAMC,MAAM,OAAOC,IAAKR,EAAQS,aACpD,kBAACC,EAAA,EAAD,CAAUP,UAAU,eAClB,kBAACQ,EAAA,EAAD,KAAYX,EAAQY,aACpB,kBAACC,EAAA,EAAD,CAAUV,UAAU,aAApB,aACaH,EAAQc,cAErB,kBAACC,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAS,kBAAMhB,EAAUD,KAAjD,c,QC4COkB,EAhDC,SAAC,GAAmB,IAAjBjB,EAAgB,EAAhBA,UAAgB,EACHkB,mBAAS,IADN,mBAC1BnB,EAD0B,KACjBoB,EADiB,KAG3BC,EAAW,uCAAG,kCAAAC,EAAA,+EAEOC,IAAMC,IAVvB,kEAUgC,CACpCC,QAAS,CACPC,cAfK,8DAWO,gBAERC,EAFQ,EAERA,KASAC,EAAWD,EAAXC,OAEFC,EAAaD,EAAOE,KAAI,SAACC,GAAD,MAAY,CACxCtB,WAAYsB,EAAMvB,IAAIwB,OACtBC,UAAWF,EAAMvB,IAAI0B,KACrBtB,YAAauB,SAAOC,OACpBtB,aAAcuB,WAASC,QACvBC,GAAIJ,SAAOK,WAEbC,QAAQC,IAAIb,GAEZT,EAAWS,GAtBK,kDAwBhBY,QAAQC,IAAR,MAxBgB,0DAAH,qDAgCjB,OAJAC,qBAAU,WACRtB,MACC,IAGD,kBAACuB,EAAA,EAAD,CAAWC,OAAK,GACd,wBAAI1C,UAAU,4BAAd,YACA,kBAAC2C,EAAA,EAAD,KACG9C,EAAQ8B,KAAI,SAAC9B,GAAD,OACX,kBAAC+C,EAAA,EAAD,CAAKC,GAAI,EAAGC,IAAKjD,EAAQuC,IACvB,kBAAC,EAAD,CAAUvC,QAASA,EAASC,UAAWA,W,wCCKpCiD,EAhDF,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,OAChCC,EAAS,EAMb,OAJAH,EAASI,SAAQ,SAACC,GAChBF,EAASG,WAAWH,GAAUG,WAAWD,EAAK1C,iBAI9C,kBAAC8B,EAAA,EAAD,CAAWC,OAAK,GACd,wBAAI1C,UAAU,gBAAd,aACA,kBAACuD,EAAA,EAAD,KACGP,EAASrB,KAAI,SAAC0B,GAAD,OACZ,kBAACG,EAAA,EAAD,CAAeV,IAAKO,EAAKjB,IACvB,kBAACO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,yBAAKzC,OAAQ,GAAIE,IAAKgD,EAAKvB,aAE7B,kBAACc,EAAA,EAAD,CAAK5C,UAAU,eACb,yBAAKA,UAAU,gBAAgBqD,EAAK5C,aACpC,0CAAgB4C,EAAK1C,cACrB,kBAACC,EAAA,EAAD,CAAQC,MAAM,SAASC,QAAS,kBAAMmC,EAAWI,KAAjD,iBASTL,EAASS,QAAU,EAClB,kBAAC1D,EAAA,EAAD,CAAMC,UAAU,oBACd,kBAAC0D,EAAA,EAAD,oBACA,kBAACnD,EAAA,EAAD,wBACmByC,EAASS,OAD5B,eACgDN,GAEhD,kBAACQ,EAAA,EAAD,KACE,kBAAC/C,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAASoC,GAAjC,cAMJ,wBAAIlD,UAAU,gBAAd,mBCEO4D,MA7Cf,WAAgB,IAAD,EACmB5C,mBAAS,IAD5B,mBACNgC,EADM,KACIa,EADJ,KA8Bb,OACE,kBAACpB,EAAA,EAAD,CAAWC,OAAK,GACd,kBAAC,IAAD,MACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,kBAAC,EAAD,CAAS/C,UAhCC,SAACuD,IAKO,IAJDL,EAASc,WAAU,SAAUC,GAClD,OAAOA,EAAM3B,KAAOiB,EAAKjB,MAU3ByB,EAAY,GAAD,mBAAKb,GAAL,CAAeK,KANxBW,YAAM,wBAAyB,CAC7BC,KAAM,cA2BN,kBAACrB,EAAA,EAAD,CAAKC,GAAG,KACN,kBAAC,EAAD,CAAMG,SAAUA,EAAUC,WAZf,SAACI,GAClBQ,EAAYb,EAASkB,QAAO,SAACC,GAAD,OAAgBA,EAAW/B,KAAOiB,EAAKjB,QAWXc,OApB3C,WACbW,EAAY,IAEZG,YAAM,oBAAqB,CACzBC,KAAM,mB,wCCjCCG,EAAcC,0BCsGZC,EAlFA,WAAO,IAAD,EACbC,EAAUC,qBAAWJ,GADR,EAGOpD,mBAAS,IAHhB,mBAGZyD,EAHY,KAGLC,EAHK,OAIa1D,mBAAS,IAJtB,mBAIZ2D,EAJY,KAIFC,EAJE,KA0BnB,iBAAIL,EAAQM,YAAZ,aAAI,EAAcC,KACT,kBAAC,IAAD,CAAUC,GAAG,MAIpB,kBAACtC,EAAA,EAAD,CAAWzC,UAAU,eACnB,kBAAC2C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKoC,GAAI,EAAGhF,UAAU,oBACpB,kBAACD,EAAA,EAAD,KACE,kBAACkF,EAAA,EAAD,CAAMC,SAdK,SAACC,GACpBA,EAAEC,iBAfFC,IACGC,OACAC,2BAA2Bd,EAAOE,GAClCa,MAAK,SAACC,GACLnD,QAAQC,IAAIkD,GACZlB,EAAQmB,QAAQ,CAAEjB,MAAOgB,EAAIZ,KAAKJ,MAAOK,IAAKW,EAAIZ,KAAKC,SAExDa,OAAM,SAACC,GACNtD,QAAQC,IAAIqD,GACZ5B,YAAM4B,EAAMC,QAAS,CACnB5B,KAAM,eAmBF,kBAACP,EAAA,EAAD,CAAY1D,UAAU,IAAtB,eACA,kBAACO,EAAA,EAAD,KACE,kBAACuF,EAAA,EAAD,CAAWC,KAAG,GACZ,kBAACC,EAAA,EAAD,CAAOC,IAAI,QAAQC,GAAI,GAAvB,SAGA,kBAACtD,EAAA,EAAD,CAAKsD,GAAI,GACP,kBAACC,EAAA,EAAD,CACElC,KAAK,QACLmC,KAAK,QACLhE,GAAG,QACHiE,YAAY,qBACZC,MAAO7B,EACP8B,SAAU,SAACpB,GAAD,OAAOT,EAASS,EAAEqB,OAAOF,YAIzC,kBAACR,EAAA,EAAD,CAAWC,KAAG,GACZ,kBAACC,EAAA,EAAD,CAAOC,IAAI,WAAWC,GAAI,GAA1B,YAGA,kBAACtD,EAAA,EAAD,CAAKsD,GAAI,GACP,kBAACC,EAAA,EAAD,CACElC,KAAK,WACLmC,KAAK,WACLhE,GAAG,WACHiE,YAAY,qBACZC,MAAO3B,EACP4B,SAAU,SAACpB,GAAD,OAAOP,EAAYO,EAAEqB,OAAOF,aAK9C,kBAAC3C,EAAA,EAAD,KACE,kBAAC/C,EAAA,EAAD,CAAQqD,KAAK,SAASwC,OAAK,EAAC5F,MAAM,WAAlC,kBCYDyD,EAlFA,WAAO,IAAD,EACbC,EAAUC,qBAAWJ,GADR,EAGOpD,mBAAS,IAHhB,mBAGZyD,EAHY,KAGLC,EAHK,OAIa1D,mBAAS,IAJtB,mBAIZ2D,EAJY,KAIFC,EAJE,KA0BnB,iBAAIL,EAAQM,YAAZ,aAAI,EAAcC,KACT,kBAAC,IAAD,CAAUC,GAAG,MAIpB,kBAACtC,EAAA,EAAD,CAAWzC,UAAU,eACnB,kBAAC2C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKoC,GAAI,EAAGhF,UAAU,oBACpB,kBAACD,EAAA,EAAD,KACE,kBAACkF,EAAA,EAAD,CAAMC,SAdK,SAACC,GACpBA,EAAEC,iBAfFC,IACGC,OACAoB,+BAA+BjC,EAAOE,GACtCa,MAAK,SAACC,GACLnD,QAAQC,IAAIkD,GACZlB,EAAQmB,QAAQ,CAAEjB,MAAOgB,EAAIZ,KAAKJ,MAAOK,IAAKW,EAAIZ,KAAKC,SAExDa,OAAM,SAACC,GACNtD,QAAQC,IAAIqD,GACZ5B,YAAM4B,EAAMC,QAAS,CACnB5B,KAAM,eAmBF,kBAACP,EAAA,EAAD,CAAY1D,UAAU,IAAtB,eACA,kBAACO,EAAA,EAAD,KACE,kBAACuF,EAAA,EAAD,CAAWC,KAAG,GACZ,kBAACC,EAAA,EAAD,CAAOC,IAAI,QAAQC,GAAI,GAAvB,SAGA,kBAACtD,EAAA,EAAD,CAAKsD,GAAI,GACP,kBAACC,EAAA,EAAD,CACElC,KAAK,QACLmC,KAAK,QACLhE,GAAG,QACHiE,YAAY,qBACZC,MAAO7B,EACP8B,SAAU,SAACpB,GAAD,OAAOT,EAASS,EAAEqB,OAAOF,YAIzC,kBAACR,EAAA,EAAD,CAAWC,KAAG,GACZ,kBAACC,EAAA,EAAD,CAAOC,IAAI,WAAWC,GAAI,GAA1B,YAGA,kBAACtD,EAAA,EAAD,CAAKsD,GAAI,GACP,kBAACC,EAAA,EAAD,CACElC,KAAK,WACLmC,KAAK,WACLhE,GAAG,WACHiE,YAAY,qBACZC,MAAO3B,EACP4B,SAAU,SAACpB,GAAD,OAAOP,EAAYO,EAAEqB,OAAOF,aAK9C,kBAAC3C,EAAA,EAAD,KACE,kBAAC/C,EAAA,EAAD,CAAQqD,KAAK,SAASwC,OAAK,EAAC5F,MAAM,WAAlC,kBClFD8F,EARM,WACnB,OACE,6BACE,mD,gFC+DSC,EApDA,WAAO,IAAD,EACbrC,EAAUC,qBAAWJ,GADR,EAGSpD,oBAAS,GAHlB,mBAGZ6F,EAHY,KAGJC,EAHI,KASnB,OACE,kBAACC,EAAA,EAAD,CAAQlG,MAAM,OAAOmG,OAAK,EAACC,OAAO,MAChC,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMnC,GAAG,IAAI/E,UAAU,cAAvB,eAIF,kBAACmH,EAAA,EAAD,CAAYnH,UAAU,eACnB,UAAAuE,EAAQM,YAAR,eAAcJ,OAAQF,EAAQM,KAAKJ,MAAQ,IAE9C,kBAAC2C,EAAA,EAAD,CAAetG,QAdJ,WACbgG,GAAWD,MAcT,kBAACQ,EAAA,EAAD,CAAUR,OAAQA,EAAQS,QAAM,GAC9B,kBAACC,EAAA,EAAD,CAAKvH,UAAU,UAAUsH,QAAM,GAC5B/C,EAAQM,KACP,kBAAC2C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACE3G,QAAS,WACPyD,EAAQmB,QAAQ,OAElB1F,UAAU,cAJZ,WAUF,oCACE,kBAACwH,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASC,IAAKC,IAAM5C,GAAG,UAAU/E,UAAU,cAA3C,WAIF,kBAACwH,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASC,IAAKC,IAAM5C,GAAG,UAAU/E,UAAU,cAA3C,gBC9BhBqF,IAASuC,cC3BM,CACbC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBDqBjB,IAoBexE,EApBH,WAAO,IAAD,EACQ5C,mBAAS,MADjB,mBACT6D,EADS,KACHa,EADG,KAGhB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,kBAACtB,EAAYiE,SAAb,CAAsB/B,MAAO,CAAEzB,OAAMa,YACnC,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO4C,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,UAAUC,UAAWE,IACvC,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,UAAUC,UAAWlE,IACvC,kBAAC,IAAD,CAAOgE,OAAK,EAACC,KAAK,IAAIC,UAAW7B,QE7BvBgC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/D,MAAK,SAAAgE,GACJA,EAAaC,gBAEd9D,OAAM,SAAAC,GACLtD,QAAQsD,MAAMA,EAAMC,a","file":"static/js/main.143eccad.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nconst CartItem = ({ product, addInCart }) => {\r\n  return (\r\n    <Card className=\"mt-2  mb-1\">\r\n      <CardImg top height=\"250\" width=\"100%\" src={product.smallImage} />\r\n      <CardBody className=\"text-center\">\r\n        <CardTitle>{product.productName}</CardTitle>\r\n        <CardText className=\"secondary\">\r\n          price: RS {product.productPrice}\r\n        </CardText>\r\n        <Button color=\"success\" onClick={() => addInCart(product)}>\r\n          Buy Now\r\n        </Button>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport Axios from \"axios\";\r\n\r\nimport CardItem from \"./Cartitem\";\r\n\r\nimport { random, commerce } from \"faker\";\r\nimport { Container, Col, Row } from \"reactstrap\";\r\nconst apiKey = \"563492ad6f91700001000001c3fb127202bc41639d0edd235c491ff2\";\r\n// \"INSERT_YOUR_KEY_HERE\"\r\n\r\nconst url = \"https://api.pexels.com/v1/search?query=laptop&per_page=6&page=1\";\r\n\r\n// const localUrl =\r\n//   \"https://jsonware.com/json/3631f2ed0b38f18d32387d6c5c92c665.json\";\r\n\r\nconst BuyPage = ({ addInCart }) => {\r\n  const [product, setProduct] = useState([]);\r\n\r\n  const fetchPhotos = async () => {\r\n    try {\r\n      const { data } = await Axios.get(url, {\r\n        headers: {\r\n          Authorization: apiKey,\r\n        },\r\n      });\r\n\r\n      //   const fetchPhotos = async () => {\r\n      //     const { data } = await Axios.get(localUrl);\r\n\r\n      const { photos } = data;\r\n\r\n      const allProduct = photos.map((photo) => ({\r\n        smallImage: photo.src.medium,\r\n        tinyImage: photo.src.tiny,\r\n        productName: random.word(),\r\n        productPrice: commerce.price(),\r\n        id: random.uuid(),\r\n      }));\r\n      console.log(allProduct);\r\n\r\n      setProduct(allProduct);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPhotos();\r\n  }, []);\r\n\r\n  return (\r\n    <Container fluid>\r\n      <h1 className=\"text-success text-center\">Buy Page</h1>\r\n      <Row>\r\n        {product.map((product) => (\r\n          <Col md={4} key={product.id}>\r\n            <CardItem product={product} addInCart={addInCart} />\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\nexport default BuyPage;\r\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Button,\r\n  CardHeader,\r\n  CardBody,\r\n  Card,\r\n  CardFooter,\r\n  Col,\r\n  Row,\r\n} from \"reactstrap\";\r\n\r\nconst Cart = ({ cartItem, removeItem, buyNow }) => {\r\n  let amount = 0;\r\n\r\n  cartItem.forEach((item) => {\r\n    amount = parseFloat(amount) + parseFloat(item.productPrice);\r\n  });\r\n\r\n  return (\r\n    <Container fluid>\r\n      <h1 className=\"text-success\">Your Cart</h1>\r\n      <ListGroup>\r\n        {cartItem.map((item) => (\r\n          <ListGroupItem key={item.id}>\r\n            <Row>\r\n              <Col>\r\n                <img height={80} src={item.tinyImage} />\r\n              </Col>\r\n              <Col className=\"text-center\">\r\n                <div className=\"text-primary\">{item.productName}</div>\r\n                <span>price :- {item.productPrice}</span>\r\n                <Button color=\"danger\" onClick={() => removeItem(item)}>\r\n                  Remove\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </ListGroupItem>\r\n        ))}\r\n      </ListGroup>\r\n      {/* If everything is empty */}\r\n      {cartItem.length >= 1 ? (\r\n        <Card className=\"text-center mt-3\">\r\n          <CardHeader>Grand Total</CardHeader>\r\n          <CardBody>\r\n            Your amount for {cartItem.length} product is {amount}\r\n          </CardBody>\r\n          <CardFooter>\r\n            <Button color=\"success\" onClick={buyNow}>\r\n              pay here\r\n            </Button>\r\n          </CardFooter>\r\n        </Card>\r\n      ) : (\r\n        <h1 className=\"text-warning\">Cart is empty</h1>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n// import \"./App.css\";\r\n\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nimport BuyPage from \"../components/BuyPage\";\r\nimport Cart from \"../components/Cart\";\r\n// import { CartItem } from \"../components/Cartitem\";\r\n\r\nfunction App() {\r\n  const [cartItem, setCartItem] = useState([]);\r\n\r\n  const addInCart = (item) => {\r\n    const isAlreadyAdded = cartItem.findIndex(function (array) {\r\n      return array.id === item.id;\r\n    });\r\n\r\n    if (isAlreadyAdded !== -1) {\r\n      toast(\"already added in cart\", {\r\n        type: \"error\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    setCartItem([...cartItem, item]);\r\n  };\r\n\r\n  const buyNow = () => {\r\n    setCartItem([]);\r\n\r\n    toast(\"Purchase Complete\", {\r\n      type: \"success\",\r\n    });\r\n  };\r\n\r\n  const removeItem = (item) => {\r\n    setCartItem(cartItem.filter((singleItem) => singleItem.id !== item.id));\r\n  };\r\n\r\n  return (\r\n    <Container fluid>\r\n      <ToastContainer />\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <BuyPage addInCart={addInCart} />\r\n        </Col>\r\n        <Col md=\"4\">\r\n          <Cart cartItem={cartItem} removeItem={removeItem} buyNow={buyNow} />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createContext } from \"react\";\r\n\r\nexport const UserContext = createContext();\r\n","import React, { useContext, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  Button,\r\n  FormGroup,\r\n  Label,\r\n  Col,\r\n  Row,\r\n  Input,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  CardHeader,\r\n} from \"reactstrap\";\r\n\r\nimport firebase from \"firebase/app\";\r\nimport { UserContext } from \"../Contexts/UserContext\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Signup = () => {\r\n  const context = useContext(UserContext);\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleSignUp = () => {\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((res) => {\r\n        console.log(res);\r\n        context.setUser({ email: res.user.email, uid: res.user.uid });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        toast(error.message, {\r\n          type: \"error\",\r\n        });\r\n      });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleSignUp();\r\n  };\r\n\r\n  if (context.user?.uid) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <Container className=\"text-center\">\r\n      <Row>\r\n        <Col lg={6} className=\"offset-lg-3 mt-5\">\r\n          <Card>\r\n            <Form onSubmit={handleSubmit}>\r\n              <CardHeader className=\"\">SignIn here</CardHeader>\r\n              <CardBody>\r\n                <FormGroup row>\r\n                  <Label for=\"email\" sm={3}>\r\n                    Email\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      id=\"email\"\r\n                      placeholder=\"provide your email\"\r\n                      value={email}\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for=\"password\" sm={3}>\r\n                    Password\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"password\"\r\n                      placeholder=\"your password here\"\r\n                      value={password}\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n              </CardBody>\r\n              <CardFooter>\r\n                <Button type=\"submit\" block color=\"primary\">\r\n                  Sign In\r\n                </Button>\r\n              </CardFooter>\r\n            </Form>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React, { useContext, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  Button,\r\n  FormGroup,\r\n  Label,\r\n  Col,\r\n  Row,\r\n  Input,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  CardHeader,\r\n} from \"reactstrap\";\r\n\r\nimport firebase from \"firebase/app\";\r\nimport { UserContext } from \"../Contexts/UserContext\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Signup = () => {\r\n  const context = useContext(UserContext);\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleSignUp = () => {\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((res) => {\r\n        console.log(res);\r\n        context.setUser({ email: res.user.email, uid: res.user.uid });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        toast(error.message, {\r\n          type: \"error\",\r\n        });\r\n      });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleSignUp();\r\n  };\r\n\r\n  if (context.user?.uid) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <Container className=\"text-center\">\r\n      <Row>\r\n        <Col lg={6} className=\"offset-lg-3 mt-5\">\r\n          <Card>\r\n            <Form onSubmit={handleSubmit}>\r\n              <CardHeader className=\"\">SignUP here</CardHeader>\r\n              <CardBody>\r\n                <FormGroup row>\r\n                  <Label for=\"email\" sm={3}>\r\n                    Email\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      id=\"email\"\r\n                      placeholder=\"provide your email\"\r\n                      value={email}\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for=\"password\" sm={3}>\r\n                    Password\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"password\"\r\n                      placeholder=\"your password here\"\r\n                      value={password}\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n              </CardBody>\r\n              <CardFooter>\r\n                <Button type=\"submit\" block color=\"primary\">\r\n                  Sign Up\r\n                </Button>\r\n              </CardFooter>\r\n            </Form>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React from \"react\";\r\n\r\nconst PageNotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1>PageNotFound Page</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageNotFound;\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  NavbarText,\r\n} from \"reactstrap\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserContext } from \"../Contexts/UserContext\";\r\n\r\nconst Header = () => {\r\n  const context = useContext(UserContext);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <Navbar color=\"info\" light expand=\"md\">\r\n      <NavbarBrand>\r\n        <Link to=\"/\" className=\"text-white\">\r\n          Sample APP\r\n        </Link>\r\n      </NavbarBrand>\r\n      <NavbarText className=\"text-white\">\r\n        {context.user?.email ? context.user.email : \"\"}\r\n      </NavbarText>\r\n      <NavbarToggler onClick={toggle} />\r\n      <Collapse isOpen={isOpen} navbar>\r\n        <Nav className=\"ml-auto\" navbar>\r\n          {context.user ? (\r\n            <NavItem>\r\n              <NavLink\r\n                onClick={() => {\r\n                  context.setUser(null);\r\n                }}\r\n                className=\"text-white\"\r\n              >\r\n                Logout\r\n              </NavLink>\r\n            </NavItem>\r\n          ) : (\r\n            <>\r\n              <NavItem>\r\n                <NavLink tag={Link} to=\"/signup\" className=\"text-white\">\r\n                  Signup\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink tag={Link} to=\"/signin\" className=\"text-white\">\r\n                  Signin\r\n                </NavLink>\r\n              </NavItem>\r\n            </>\r\n          )}\r\n        </Nav>\r\n      </Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\nexport default Header;\r\n","import React, { useState } from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n//react-router\nimport { BrowserRouter as Router, Switch, Route, } from \"react-router-dom\";\n\n//toast\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\n//firebase\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\n//components\nimport Home from \"./Pages/Home\";\nimport Signin from \"./Pages/Signin\";\nimport Signup from \"./Pages/Signup\";\nimport PageNotFound from \"./Pages/PageNotFound\";\nimport { UserContext } from \"./Contexts/UserContext\";\n// import Footer from \"./layout/Footer\";\nimport Header from \"./layout/Header\";\nimport firebaseConfig from \"./Config/FirebaseConfig\";\n// init firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n\n  return (\n    <Router>\n      <ToastContainer />\n      <UserContext.Provider value={{ user, setUser }}>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/signin\" component={Signin} />\n          <Route exact path=\"/signup\" component={Signup} />\n          <Route exact path=\"*\" component={PageNotFound} />\n        </Switch>\n        {/* <Footer /> */}\n      </UserContext.Provider>\n    </Router>\n  );\n};\n\nexport default App;\n","export default {\r\n  apiKey: \"AIzaSyAPgnDol7hC0ZlwTCd5jWFpoKPq5U599iw\",\r\n  authDomain: \"mygitapp-5380f.firebaseapp.com\",\r\n  databaseURL: \"https://mygitapp-5380f.firebaseio.com\",\r\n  projectId: \"mygitapp-5380f\",\r\n  storageBucket: \"mygitapp-5380f.appspot.com\",\r\n  messagingSenderId: \"492490343161\",\r\n  appId: \"1:492490343161:web:10b7510ebfc589ca88d828\",\r\n  measurementId: \"G-3EYDVE7489\",\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}